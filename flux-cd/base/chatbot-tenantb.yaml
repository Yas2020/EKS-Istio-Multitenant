---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::253226449123:role/tenantb-app-access-role
  name: tenantb-sa
  namespace: tenantb-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot
  labels:
    app: chatbot
  namespace: tenantb-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatbot
  template:
    metadata:
      labels:
        workload-tier: frontend
        app: chatbot
    spec:
      serviceAccountName: tenantb-sa
      containers:
        - image: ghcr.io/yas2020/eks-istio-multitenant/app-ui
          imagePullPolicy: Always
          name: chatbot
          ports:
            - containerPort: 8501
          env:
          - name: SESSIONS_TABLE
            value: Sessions_tenantb_c88c6
        - image: ghcr.io/yas2020/eks-istio-multitenant/rag-api
          imagePullPolicy: Always
          name: ragapi
          ports:
            - containerPort: 8000
          env:
          - name: CONTEXTUAL_DATA_BUCKET
            value: contextual-data-tenantb-c88c6
          - name: CHATHISTORY_TABLE
            value: ChatHistory_tenantb_c88c6
          - name: TEXT2TEXT_MODEL_ID
            value: meta.llama3-8b-instruct-v1:0
          - name: EMBEDDING_MODEL_ID
            value: amazon.titan-embed-text-v2:0
          - name: BEDROCK_SERVICE
            value: bedrock-runtime
          - name: AWS_DEFAULT_REGION
            value: ca-central-1
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: chatbot
#   labels:
#     app: chatbot
#   namespace: tenantb-ns
# spec:
#   selector:
#     app: chatbot
#   ports:
#     - port: 80
#       name: http
#       targetPort: 8501
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: chatbot
  namespace: tenantb-ns
spec:
  provider: istio
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chatbot
  progressDeadlineSeconds: 60
  service:
    port: 80
    targetPort: 8501 
    portDiscovery: true
    hosts:
      - tenantb.example.com
    gateways:
      - multi-tenant-gateway-ns/multi-tenant-gateway
  analysis:
    interval: 1m
    iterations: 10
    threshold: 2
    # maxWeight: 30
    # stepWeight: 10
    metrics:
    - name: request-success-rate
      # minimum req success rate (non 5xx responses)
      # percentage (0-100)
      thresholdRange:
        min: 99
      interval: 1m
    - name: request-duration
      # maximum req duration P99
      # milliseconds
      thresholdRange:
        max: 500
      interval: 1m
    webhooks:
      - name: acceptance-test
        type: pre-rollout
        url: http://loadtester.flagger-system/
        timeout: 60s
        metadata:
          type: bash
          cmd: "curl -s http://chatbot-canary.tenantb"
      - name: load-test
        type: rollout
        url: http://loadtester.flagger-system/
        timeout: 5s
        metadata:
          cmd: "hey -z 1m -q 10 -c 2 http://chatbot-canary.tenantb"
